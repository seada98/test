# Define a Kubernetes namespace to deploy the application in
apiVersion: v1
kind: Namespace
metadata:
  name: my-app

---

# Define the Persistent Volume for the PostgreSQL database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
  namespace: my-app
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 3Gi
  hostPath:
    path: /data/db

---

# Define the Persistent Volume Claim for the PostgreSQL database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
  namespace: my-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: db
---
# Define the Persistent Volume Claim for the API application
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-pvc
  namespace: my-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: api
---
# Define the Persistent Volume Claim for the React application
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pvc
  namespace: my-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: app
---
# Define the Persistent Volume Claim for the React application
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pvc
  namespace: my-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: app
---

# Define the ConfigMap for the Django application
apiVersion: v1
kind: ConfigMap
metadata:
  name: django-config
  namespace: my-app
data:
  DATABASE_URL: postgresql://admin:password@psql:5432/postgres
  DEBUG: "False"
  SECRET_KEY: my-secret-key
  ALLOWED_HOSTS: "*"

---

# Define the Deployment for the PostgreSQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: db
  template:
    metadata:
      labels:
        name: db
    spec:
      containers:
        - name: db
          image: postgres:14.1-alpine
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: db-pvc

---

# Define the Deployment for the Django application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: django
  template:
    metadata:
      labels:
        name: django
    spec:
      containers:
        - name: django
          image: seada98/backend:v1
          envFrom:
            - configMapRef:
                name: django-config
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: api-storage
              mountPath: /api
      volumes:
        - name: api-storage
          persistentVolumeClaim:
            claimName: api-pvc
---

# Define the Deployment for the React application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react
  namespace: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: react
  template:
    metadata:
      labels:
        name: react
    spec:
      containers:
        - name: react
          image: seada98/frontend:v1
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: app-storage
              mountPath: /app
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: app-pvc

---

# Define the Service for the PostgreSQL database
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: my-app
spec:
  selector:
    name: db
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  type: ClusterIP
---

# Define the Service for the Django application
apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: my-app
spec:
  selector:
    name: django
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  type: LoadBalancer
---

# Define the Service for the React application
apiVersion: v1
kind: Service
metadata:
  name: react
  namespace: my-app
spec:
  selector:
    name: react
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  type: LoadBalancer